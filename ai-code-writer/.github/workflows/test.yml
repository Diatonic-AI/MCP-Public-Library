name: Terminal Backend Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check WSL availability
      shell: powershell
      run: |
        try {
          wsl --status
          Write-Output "WSL_AVAILABLE=true" | Out-File -FilePath $env:GITHUB_ENV -Append
        } catch {
          Write-Output "WSL_AVAILABLE=false" | Out-File -FilePath $env:GITHUB_ENV -Append
        }
    
    - name: Run unit tests
      run: npm run test:unit
      env:
        CI: true
    
    - name: Run integration tests (Windows PowerShell)
      run: npm run test:integration
      env:
        CI: true
        TEST_PLATFORM: windows
    
    - name: Run integration tests (WSL)
      if: env.WSL_AVAILABLE == 'true'
      run: npm run test:integration
      env:
        CI: true
        TEST_PLATFORM: wsl
        FORCE_WSL_TESTS: true
    
    - name: Generate coverage report
      run: npm run test:coverage
      env:
        CI: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: windows
        name: windows-${{ matrix.node-version }}
        fail_ci_if_error: false

  test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm run test:unit
      env:
        CI: true
    
    - name: Run integration tests (Linux)
      run: npm run test:integration
      env:
        CI: true
        TEST_PLATFORM: linux
    
    - name: Generate coverage report
      run: npm run test:coverage
      env:
        CI: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: linux
        name: linux-${{ matrix.node-version }}
        fail_ci_if_error: false

  test-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm run test:unit
      env:
        CI: true
    
    - name: Run integration tests (macOS)
      run: npm run test:integration
      env:
        CI: true
        TEST_PLATFORM: darwin
    
    - name: Generate coverage report
      run: npm run test:coverage
      env:
        CI: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: macos
        name: macos-${{ matrix.node-version }}
        fail_ci_if_error: false

  test-security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security-focused tests
      run: npm run test:unit -- --testNamePattern="(security|Security|ErrorHandler)"
      env:
        CI: true
        SECURITY_TEST_MODE: true
    
    - name: Run npm audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Check for dangerous patterns in code
      run: |
        echo "Checking for dangerous patterns..."
        ! grep -r "eval(" modules/ || (echo "Found eval() usage" && exit 1)
        ! grep -r "exec(" modules/ || (echo "Found exec() usage" && exit 1)
        ! grep -r "spawn.*shell.*true" modules/ || (echo "Found unsafe shell spawn" && exit 1)
        echo "Security check passed"

  performance-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance tests
      run: |
        echo "Running performance benchmarks..."
        timeout 300 npm run test:unit -- --testNamePattern="(performance|Performance|timeout|Timeout)" || true
        echo "Performance tests completed"
      env:
        CI: true
        PERFORMANCE_TEST_MODE: true

